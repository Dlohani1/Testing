<?xml version="1.0" encoding="UTF-8"?>
<project name="php-automate-build-ant" default="full-build">

    <!-- By default the tools are managed by Composer in ${basedir}/vendor/bin -->



    <property name="phpdox" value="${basedir}/vendor/bin/phpdox"/>
    <property name="phploc" value="${basedir}/vendor/bin/phploc"/>
  
    <property name="phpunit" value="${basedir}/vendor/bin/phpunit"/>
	
	<!-- Define the SonarQube global properties (the most usual way is to pass these properties via the command line) -->
	<property name="sonar.host.url" value="http://localhost:9000" />

	<!-- Define the Sonar properties -->
	<property name="sonar.projectKey" value="org.sonarqube:sonarqube-scanner-ant" />
	<property name="sonar.projectName" value="Example of SonarQube Scanner for Ant Usage" />
	<property name="sonar.projectVersion" value="1.0" />
	<property name="sonar.sources" value="src" />
	<property name="sonar.binaries" value="target" />
	<property name="sonar.sourceEncoding" value="UTF-8" />

    <target name="clean" unless="clean.done" description="Cleanup build artifacts.">
        <delete dir="${basedir}/build/api"/>
        <delete dir="${basedir}/build/coverage"/>
        <delete dir="${basedir}/build/logs"/>
        <delete dir="${basedir}/build/pdepend"/>
        <delete dir="${basedir}/build/phpdox"/>
        <property name="clean.done" value="true"/>
    </target>

    <target name="composer" description="Install composer packages including require-dev.">
        <get src="https://getcomposer.org/download/1.2.1/composer.phar" dest="composer.phar"/>
        <exec executable="php" failonerror="true">
            <arg value="${basedir}/composer.phar"/>
            <arg value="install"/>
            <arg value="--prefer-dist"/>
            <arg value="--no-progress"/>
        </exec>
    </target>

    <target name="full-build" depends="prepare,composer,static-analysis,phpunit,phpdox"
            description="Perform static analysis, run tests, and generate project documentation.">
        <echo message="Built"/>
    </target>

    <target name="lint" unless="lint.done" description="Perform syntax check of PHP sourcecode files.">
        <apply executable="php" failonerror="true" taskname="lint">
            <arg value="-l"/>
            <fileset dir="${basedir}/src">
                <include name="**/*.php"/>
                <!-- modified/ -->
            </fileset>
            <fileset dir="${basedir}/tests">
                <include name="**/*.php"/>
                <!-- modified/ -->
            </fileset>
        </apply>
        <property name="lint.done" value="true"/>
    </target>

    



 

    <target name="phpdox" unless="phpdox.done" depends=""
            description="Generate project documentation using phpDox.">
        <exec executable="${phpdox}" dir="${basedir}/build" taskname="phpdox"/>
        <property name="phpdox.done" value="true"/>
    </target>

    <target name="phploc" unless="phploc.done"
            description="Measure project size using PHPLOC and print human readable output. Intended for usage on the command line.">
        <exec executable="${phploc}" taskname="phploc">
            <arg value="--count-tests"/>
            <arg path="${basedir}/src"/>
            <arg path="${basedir}/tests"/>
        </exec>
        <property name="phploc.done" value="true"/>
    </target>




    <target name="phpunit" unless="phpunit.done" depends="prepare" description="Run unit tests with PHPUnit.">
        <exec executable="${basedir}/vendor/bin/phpunit.bat" resultproperty="result.phpunit" taskname="phpunit">
            <arg value="--configuration"/>
            <arg path="${basedir}/tests/phpunit.xml"/>
            <arg path="tests"/>
        </exec>
        <property name="phpunit.done" value="true"/>
    </target>

    <target name="phpunit-no-coverage" unless="phpunit.done" depends="prepare"
            description="Run unit tests with PHPUnit without generating code coverage reports.">
        <exec executable="${basedir}/vendor/bin/phpunit.bat" failonerror="true" taskname="phpunit">
            <arg value="--configuration"/>
            <arg path="${basedir}/tests/phpunit.xml"/>
            <arg path="tests"/>
            <arg value="--no-coverage"/>
        </exec>
        <property name="phpunit.done" value="true"/>
    </target>

    <target name="prepare" unless="prepare.done" depends="clean" description="Prepare for build.">
        <mkdir dir="${basedir}/build/api"/>
        <mkdir dir="${basedir}/build/coverage"/>
        <mkdir dir="${basedir}/build/logs"/>
        <mkdir dir="${basedir}/build/phpdox"/>
        <property name="prepare.done" value="true"/>
    </target>

    <target name="quick-build" depends="prepare,composer,lint,phpunit-no-coverage"
            description="Perform lint check and run tests without generating code coverage reports.">
        <echo message="Built"/>
		
    </target>
	
	<!-- Define SonarScanner for Ant Target -->
<target name="sonar">
    <taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
        <!-- Update the following line, or put the "sonarqube-ant-task-*.jar" file in your "$HOME/.ant/lib" folder -->
        <classpath path="${ANT_HOME}/lib/sonarqube-ant-task-2.5.jar" />
    </taskdef>
 
    <!-- Execute SonarScanner for Ant Analysis -->
    <sonar:sonar />
</target>

    <target name="static-analysis" depends="lint,phpunit,sonar"
            description="Perform static analysis.">
        <echo message="Done"/>
    </target>

    

</project>